Design Pattern implementation library.
=========

https://github.com/joaopapereira/cppDevpatterns.git

Overview
=========
Library in C++ that implements a sub set of Design Patterns

This library implements in a generic approach some well known Design
Patterns. Most of the examples of these Design Patterns were created
in a Linux environment

Requirements for End Users
=========

For this library the git submodules that is setted in the folder
modules is needed so the following commands must be issued:

  git submodule update modules/logger
  git submodule update modules/semaphore

and then the location of installation of the library needed is done
using the following commands:

  cd modules/logger
  INSTALL_INC_DIR=`pwd`/../../include INSTALL_LIB_DIR=`pwd`/../../lib cmake .
  make install
  
  cd modules/semaphore
  INSTALL_INC_DIR=`pwd`/../../include INSTALL_LIB_DIR=`pwd`/../../lib cmake .
  make install
  
And the library can be found in lib folder in the top level.
After this you may want to remove the not needed folder to do that
use the following command on each submodule folder:
  make distclean


Building the library
=========
Library comes with a CMake build script (CMakeLists.txt) that can
be used on a wide range of platforms ("C" stands for cross-platofrm.).
If you don't have CMake installed already, you can download it for
free from http://www.cmake.org/.

CMake works by generating native makefiles or build projects that can
be used in the compiler environment of your choice.  The typical
workflow starts with:

  mkdir mybuild       # Create a directory to hold the build output.
  cd mybuild
  cmake ${DEVPATTERNLIB_DIR}  # Generate native build scripts.

If you want to build 's samples, you should replace the
last command with

  cmake -Dlibraries_build_samples=ON ${DEVPATTERNLIB_DIR}

If you are on a *nix system, you should now see a Makefile in the
current directory.  Just type 'make' to build logger.


If you want to build 's library with debug, you should replace the
command with

  cmake -Dcompile_with_debug=ON ${DEVPATTERNLIB_DIR}

